# Pre-commit hooks for code quality
# Install with: uv run pre-commit install
# Run manually: uv run pre-commit run --all-files

repos:
  # Fast, Essential Quality Checks
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.6
    hooks:
      - id: ruff
        args: [
          "--fix",
          "--select=E,W,F,I",
          "--ignore=E501,F841,B007,SIM102,SIM105,SIM108,SIM115,UP031,UP038,RUF001,E722"
        ]
      - id: ruff-format

  # Type checking (less strict for compatibility)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies: [
          types-PyYAML,
          types-aiofiles,
          types-requests,
          types-setuptools,
          types-toml
        ]
        args: [--ignore-missing-imports, --no-strict-optional, --allow-untyped-calls]
        files: ^src/backend/(core|services|utils)/.*\.py$

  # Basic file hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: \.(md|rst)$
      - id: end-of-file-fixer
        exclude: \.(md|rst)$
      - id: check-yaml
        exclude: ^src/sdrpp_plugin/
      - id: check-added-large-files
        args: ["--maxkb=2000"]
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: mixed-line-ending
        args: ["--fix=lf"]

  # Code formatting (less strict)
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        files: ^src/backend/
        args: [--line-length=88, --safe]

  # GitHub Actions workflow validation
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.4
    hooks:
      - id: actionlint-docker
        args: [-color]

# Exclude problematic files and directories
exclude: |
  (?x)(
    ^src/sdrpp_plugin/.*\.(cpp|h)$ |
    ^tests/.*benchmark.*\.py$ |
    ^tests/prd/.*\.py$ |
    ^scripts/.*\.py$ |
    ^sim_vehicle\.py$ |
    ^verify_dependencies\.py$ |
    \.git/ |
    \.pytest_cache/ |
    __pycache__/
  )
