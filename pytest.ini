[pytest]
# Python path configuration
pythonpath = /home/pisad/projects/pisad

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Coverage options
addopts =
    --verbose
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=0

# Markers for test categorization (reorganized Sprint 6)
markers =
    # Test category markers
    unit: Unit tests (<100ms, no external dependencies)
    integration: Integration tests (<1s, real services)
    e2e: End-to-end tests (<10s, full stack)
    sitl: SITL hardware-in-loop tests (<30s)
    performance: Performance benchmark tests (<5s)
    property: Property-based tests (hypothesis)
    contract: API contract tests

    # Priority markers
    critical: Critical safety/core functionality tests
    smoke: Basic functionality smoke tests
    safety: Safety-critical tests (HARA hazard mitigation)

    # Speed markers
    slow: Slow tests (>1s execution time)
    fast: Fast tests (<100ms execution time)

    # Requirement tracing
    requirement: Test with requirement ID (FR/NFR/Story)

    # Environment markers
    hardware: Tests requiring real hardware (deselect with '-m "not hardware"')
    mock_hardware: Tests using mock hardware (run in CI/CD)
    sdr: Tests requiring SDR hardware
    mavlink: Tests requiring MAVLink/flight controller
    beacon: Beacon-related tests
    sitl_required: Tests requiring SITL connection for velocity commands
    requires_network: Tests requiring network access
    serial: Tests that must run serially (not parallelizable)

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning

# Test timeout (seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Parallel execution with pytest-xdist
# Uses 8 workers on Raspberry Pi 5 (8 cores)
# Automatically falls back to fewer workers if needed
# Add to addopts above: -n 8 --dist loadgroup
